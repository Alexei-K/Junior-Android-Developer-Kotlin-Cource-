package lesson9.tasks

/**
 * Урок 9
 * В реальной работе вам понадобится умение находить подходящие инструменты среди существующих.
 * List, Map, Set - это котлиновские коллекции, которые имеют огромное количество методов на все случаи жизни.
 * Многие из них используют лямбда выражения, которые вы изучите в 11-12 главах.
 * В выполнении этого задания вам сильно поможет .filter{}
 * Вы можете сами придумать механизмы, для решения задач или найти в гугле этот метод и изучить.
 *
 * P.s. 10-ый урок читать не обязательно. Если и читаете - читайте поверхностно.
 */

/**
 * Задача 1.
 * Создать класс FootballTeam с названием и коллекцией содержащей FootballerModel из 7 главы 1 задачи.
 * добавить метод hireFootballer добавляющий  футболиста в команду.
 * добавить метод fireFootballer удаляющий футболиста (принимает FootballerModel)
 * Доп задание на 1 звездочку: добавить метод fireFootballerWithName удаляющий футболиста по имени (принимает стрингу)
 * Написать какой тип коллекций (set/list/map) вы выбрали и почему
 * потестировать методы hireFootballer, fireFootballer . После каждого вызова метода выводить состав команды в консоль
 */
fun main() {

}

fun task1() {

}


/**
 * Задача 2.
 * Создать дата класс Dress(одежда) с параметрами цвет, размер, название.
 * и класс Wardrobe (гардероб) c методами putDress, removeDress и методом findAllDressWithColor принимающий стрингу означающую
 * цвет и возвращающую коллекцию Dress указанного цвета которые есть в шкафу
 *
 * какой тип коллекции будет использован в Wardrode?
 */
fun task2() {

}


/**
 * Задача 3*
 * сделать класс SecretArchive
 * содержащую коллекцию номеров телефона(стринг) и их владельцев(класс Person с переменными name, surname, age).
 * У человека может быть много телефонов. У телефона всегда 1 владелец.
 * Добавить методы добавления нового телефона и его владельца, изменения владельца существующего телефона,
 * deleteNumber() - удаление номер телефона из базы
 * Доп задание на на Две звезды: deletePhoneAndAssociated() - метод принимающий номер телефона и удаляющий его из базы и все
 * телефоны этого же владельца. Возвращает количество удаленных номеров
 */

fun task3() {

}
